{"version":3,"sources":["js/data.js","js/modules/templates/image.js","js/modules/Image.js","js/modules/Galerie.js","js/main.js"],"names":["id","src","image1","alt","content","image2","image3","image4","image5","Image","data","parent","image","template","imageTemplate","propriete","replace","newImage","document","createElement","setAttribute","innerHTML","listEl","appendChild","Galerie","el","querySelector","images","_loadImages","galerieTemplate","render","push","_activerBtns","next","onclick","_nextImage"],"mappings":";;AIAA;;AACA;;AAOA,AHRA;ADOA,AGPA,ADAA;;AFQA,AGPA;ACD+B;AJS/B,AIR0C;AAG1C;AJMA,AILE;AAIF;AJEA,AIDG;AACA;AACA,AFZ4C;AEa5C,AFXH;AFFA,AIcG,AFXH;AFFA,AIcG,AFXH;AFFA,AIeE,AFZF;AFFA,AIeE,IFXmBS;AFHrB,AIeE,AFXA,iBAAaC,IAAb,EAAmB;AFHrB,AIeE,AFZmB;AEanB,ADpBiD,eHYpC,CACb;AACEV,AISJ,AFfI,EFMAA,EAAE,AISFwB,ADrBiBA,EHYb,CADN,EELOb,MAAL,GAAcD,EEelB,CAAY,CFfU,CAACC,MAAnB;AFOAV,AISFwB,ADtB6B,ADO3B,EFMAxB,AISFwB,EAAE,CJTG,CISD,CJTGvB,EENAF,EAAL,CEcQ,EFdEU,IAAI,CAACE,EFIjB,GEJY,CAAWZ,EAArB,CAFiB,CAEQ;AFOzBG,AIQU,ADrBZ,EHaEA,GAAG,EAAE,YAHP,AGVaO,IAAb,EAAmB;AHcjBN,AIQFuB,ADtBmB,ADOjB,EFOAvB,AIQFuB,MAAM,CJRG,AEPF1B,CEeP0B,CJRW,CEPT,GAAWjB,IAAI,CAACE,GEaR,CAEH,CFfM,CAAWX,GAAtB;AFGF,AEFE,CFCW,EAOZ,MERME,GAAL,GAAWO,IAAI,CAACE,KAAL,CAAWT,GAAtB;AFSCH,AIGO,ADpBW,ADSnB,CEWJ,CJHKA,EAAE,EAAE,CADN,EEPMI,OAAL,GAAeM,IAAI,CAACE,KAAL,CAAWR,OAA1B;AFSCH,AGjBD,ADSA,EFQCA,GAAG,EAAEI,EGjBDoB,ADSAZ,ECTL,GAAUK,GDSV,GAAgBJ,EFMjB,AGfmB,CAACY,WDSnB,ECTU,CAAuBhB,IAAI,CAACe,EAA5B,CAAV;AHkBCtB,AGjBD,ADSD,EFQEA,GAAG,EAAE,EGjBDmB,MAAL,SHcD;AAG0B,AGhBzB,ADSF,SCTOK,MAAL,GAAc,EAAd,CAHiB,CAGC;AHiBjBvB,AEPL,EFOKA,OAAO,EAAE;AAJX,AGZC,CHKW,EAaX,MGlBKwB,WAAL,CAAiBlB,IAAI,CAACiB,MAAtB,EAJiB,CAIc;AHmB7B3B,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,GAAG,EAAEK,eAFP;AAGEH,AGpBF,EHoBEA,GAAG,EAAE,EGpBFU,QAAL,GAAgBgB,IHiBhB,YGjBA;AHoB0B,AGnB1B,SAAKC,MAAL,CAAY,KAAKH,MAAjB,EANiB,ADcT,CCRkB;AHoBxBvB,AGnBH,ADOW,EFYRA,EGjBJ,KHiBW,EAAE;AAJX,AGZA,ADKF,CFNa,EAmBX;AACEJ,AEbJ,EFaIA,EAAE,EAAE,CADN;AAEEC,AEbF,EFaEA,GAAG,EAAEM,eAFP;AAGEJ,AEbF,EFaEA,GAAG,EAAE,iBAHP;AAG0B,AEZ1B;AFaEC,AEZF,EFYEA,OAAO,EAAE,qBGrBAuB,QAAQ;AHiBnB,AGjBmB,ADUrB,CFZa,EAyBX,8CGtBkBA,MADC;AHwBjB3B,AGxBiB,ADYrB,EFYIA,EAAE,EAAE,CADN;AAEEC,AEZJ,EFYIA,GAAG,EAAEO,eAFP;AAGEL,AG1BiB,ADcrB,EFYIA,GAAG,EAAE,iBAHP;AAG0B,AGzB1B,ADcF,4DCd4B;AH0BxBC,AG1BwB,ADe5B,EFWIA,OAAO,EAAE,GG1BFQ,KAAiB;AHsB1B,AGrBE,ADeJ,CFnBa,cGIJe,MAAL,CAAYI,IAAZ,CAAiB,IAAItB,cAAJ,CAAU;AAACE,ADgBhC,YChBgCA,MAAM,EAAE,IAAT;AAAeC,ADiB9C,YCjB8CA,KAAK,EAALA;AAAf,ADkB/B,WClBqB,CAAjB,EADwB,CAC4B;AACrD,ADkBH;ACrBqB,ADsBrB,WAAK,IAAIG,SAAT,IAAsB,IAAtB,EAA4B;ACtBP,ADsBS;ACtBT,ADuBjB,aAAKF,QAAL,GAAgB,KAAKA,QAAL,CAAcG,OAAd,CAAsB,OAAKD,SAAL,GAAe,IAArC,EAA2C,KAAKA,SAAL,CAA3C,CAAhB;ACvBiB,ADwBlB,OArBO,CAuBR;AC1BmB;AAIpB,MAED;ADqBE,UAAME,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAjB,CAxBQ,CAwBuC;;AAC/CF,MAAAA,QAAQ,CAACG,YAAT,CAAsB,OAAtB,EAA8B,OAA9B,EAzBQ,CAyBgC;2BCrBlCO,QAAQ;AACd,ADqBAV,MAAAA,KCrBKQ,EAAL,CAAQJ,ADqBA,CAACA,QCrBT,CDqBA,ECrBoB,CDqBC,ICrBIR,CDqBCA,OCrB1B,CADc,ADsBd,CCpBA,ADNQ,CA0B4B;;ACnBpC,ADoBA,WCpBKS,ADoBAX,MCpBL,ADoBA,CAAYW,ECpBE,IDoBd,CCpBmBG,ADoBAF,ECpBL,CAAQG,QDoBtB,CAA+BT,ICpBjB,CAAsB,GDoBpC,EA3BQ,CA2BkC,OCpB5B,CAAd,CAHc,CAKd;ADmBD;ACxBe,kDAMIU,MANJ;AAAA;;AAAA;AAMd,+DAA0B;AAAA,cAAjBf,KAAiB;AACxBA,UAAAA,KAAK,CAACkB,MAAN;AACD,SARa,CAUd;AACA;;AAXc;AAAA;AAAA;AAAA;AAAA;;AAYdE,MAAAA,YAAY;AACb;;;iCAEW;AACVC,MAAAA,IAAI;AACL;;;mCAEe;AAEd;AAEA;AACA,WAAKR,EAAL,CAAQC,aAAR,CAAsB,OAAtB,EAA+BQ,OAA/B,GAAyC,YAAM;AAC3CC,QAAAA,UAAU;AACb,OAFD;AAGD","file":"main.fb6bbcaf.js","sourceRoot":"..\\src","sourcesContent":["// Données qui devrait normalement venir de la db avec de l'AJAX.\r\n// import image1 from \"../../assets/slides/image1.jpg\";\r\n// var img1 = ./../dist/(startsWith(\"image1\"));\r\n// import image1 from \"./image1.jpg\";\r\n// var img1 = ../../dist/(indexOf(\"image1\"));\r\n// const img1 = ../../assets/slides/\"image1.jpg\";\r\n\r\nimport image1 from '../images/image1.jpg';\r\nimport image2 from '../images/image2.jpg';\r\nimport image3 from '../images/image3.jpg';\r\nimport image4 from '../images/image4.jpg';\r\nimport image5 from '../images/image5.jpg';\r\n\r\nexport default [\r\n  {\r\n    id: 1,\r\n    src: image1,\r\n    alt: \"A cat game\",\r\n    content: \"Photo 1 - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi blandit et nisi sed blandit.\"\r\n  },\r\n   {\r\n     id: 2,\r\n     src: image2,\r\n     alt: \"Tatoo &amp; cat\", // Titre\r\n     content: \"Photo 2 - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi blandit et nisi sed blandit.\"\r\n  },\r\n    {\r\n      id: 3,\r\n      src: image3,\r\n      alt: \"Tatoo &amp; cat\", // Titre\r\n      content: \"Photo 3 - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi blandit et nisi sed blandit.\"\r\n  },\r\n    {\r\n      id: 4,\r\n      src: image4,\r\n      alt: \"Tatoo &amp; cat\", // Titre\r\n      content: \"Photo 4 - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi blandit et nisi sed blandit.\"\r\n  },\r\n    {\r\n      id: 5,\r\n      src: image5,\r\n      alt: \"Tatoo &amp; cat\", // Titre\r\n      content: \"Photo 5 - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi blandit et nisi sed blandit.\"\r\n  }\r\n];\r\n","// Template d'une image\r\n\r\nexport default `\r\n<!-- Image template -->\r\n  <figure data-id=\"{{id}}\">\r\n    <img src=\"{{src}}\" alt=\"{{alt}}\">\r\n    <!-- Bouton d'informations sur la photo -->\r\n    <figcaption>\r\n      <a href=\"#\" class=\"icon icon-info\">\r\n        <i class=\"material-icons\">add_circle</i>\r\n      </a>\r\n      <div>{{content}}</div>\r\n    </figcaption>\r\n    <!-- /Bouton d'informations sur la photo -->\r\n  </figure>\r\n`;\r\n","import imageTemplate from './templates/image'; // On importe imageTemplate\r\n\r\n// data: {\r\n//   parent: Galerie,\r\n//   image: {id: 1, src: \"./assets/slides/image2.jpg\", alt: \"A cat game\", content: \"Lorem Ipsum...\"}\r\n// }\r\n\r\nexport default class Image {\r\n  constructor (data) {\r\n    this.parent = data.parent;\r\n    this.id = data.image.id; // Ton id (id de class Image), est égal à l'id de image\r\n    this.src = data.image.src;\r\n    this.alt = data.image.alt;\r\n    this.content = data.image.content;\r\n    this.template = imageTemplate;\r\n  }\r\n  /* On crée le render après car dans le constructor on a pas encore\r\n     de code HTML du template, quand on le push, le code HTML se construit apres. */\r\n  render () { // Quand je demande a une image de faire un render ..\r\n  // On va transformer le this.template\r\n  // Je remplace les données statique par les données de Image\r\n    // this.template = this.template.replace('{{id}}', this.id); // On va remplacer (replace) les {{id}} par this.id\r\n    // this.template = this.template.replace('{{src}}', this.src);\r\n    // this.template = this.template.replace('{{alt}}', this.alt);\r\n    // this.template = this.template.replace('{{content}}', this.content); // idem que id\r\n  //OU BOUCLE\r\n\r\n  // for (let propriete in this) { // On parcour toutes les propriétés | this c'est l'objet\r\n  //     this.template = this.template.replace('{{'+propriete+'}}', this.[propriete]);\r\n  //   }\r\n  //\r\n  //   const newImage = document.createElement('div'); // .. Il va créer un nouveau div ..\r\n  //   newImage.innerHTML = this.template; // .. A la place d'afficher un Coucou on aura le template d'une image ..\r\n  //   this.parent.listEl.appendChild(newImage); // .. et il va venir l'ajouter a la Galerie\r\n  //   propriete.render;\r\n  // }\r\n  //\r\n  for (let propriete in this) { // On parcour toutes les propriétés | this c'est l'objet\r\n      this.template = this.template.replace('{{'+propriete+'}}', this[propriete]);\r\n    }\r\n\r\n    // const newImage = document.createElement('div'); // .. Il va créer un nouveau div ..\r\n    const newImage = document.createElement('li'); // Création du nouveau li\r\n    newImage.setAttribute(\"class\",\"slide\"); // class slide au nouveau élément li\r\n    newImage.innerHTML = this.template; // .. A la place d'afficher un Coucou on aura le template d'une image ..\r\n    this.parent.listEl.appendChild(newImage); // .. et il va venir l'ajouter a la Galerie\r\n  }\r\n}\r\n","import Image from './Image'; // Charge Image\r\nimport galerieTemplate from './templates/galerie'; // Charge le template de la galerie\r\n\r\nexport default class Galerie { // Définit la propriété élément (el)\r\n  constructor (data) { // data récupérées de l'instanciation new Galerie\r\n    this.el = document.querySelector(data.el);\r\n    this.listEl;\r\n    this.images = []; // On met les données chargée ci dessous dans ce tableau vide.\r\n    this._loadImages(data.images); // On charge les données des images pour hydrater this.images\r\n    this.template = galerieTemplate;\r\n    this.render(this.images); // On lance la méthode render (éffectue le rendu)\r\n  }\r\n\r\n  // METHODE loadImages - Chargement des images sous formes d'objets de type Image dans this.images\r\n    // But => Parcour tous les images pour en faire des objet de type Image\r\n  _loadImages (images) {\r\n    for (let image of images) {\r\n      this.images.push(new Image({parent: this, image})); //dans (image));, on envois un tableau de type json avec 4 propriétés (id, src, alt, content)\r\n    }\r\n  }\r\n\r\n  // Rendu de la Galerie\r\n  render (images) {\r\n    this.el.innerHTML = this.template;\r\n    // L'élément .image-list existe pour le naviguateur\r\n    this.listEl = this.el.querySelector('.image-list');\r\n\r\n    // Rendu des images - On demande à chacun des images de faire un render, donc de s'affciher\r\n    for (let image of images) {\r\n      image.render();\r\n    }\r\n\r\n    // activer la deux.\r\n    //\r\n    _activerBtns ();\r\n  }\r\n\r\n  _nextImage(){\r\n    next\r\n  }\r\n\r\n  _activerBtns () {\r\n\r\n    // Previous\r\n\r\n    // Next\r\n    this.el.querySelector('.next').onclick = () => {\r\n        _nextImage();\r\n    };\r\n  }\r\n}\r\n","import images   from './data'; // Importation des données des images\r\nimport Galerie  from './modules/Galerie'; // On charge Galerie.js\r\n\r\n\r\n// Instanciation (Création) d'un nouvel objet de type Galerie\r\n  // On lui envois un élément et des données images\r\n\r\n\r\nimport image1 from '../images/image1.jpg';\r\n//\r\n   // var debugDiv = document.querySelector('#debug');\r\n   // const imageDiv = document.createElement('div');\r\n   // //imageDiv.innerHTML = \"<img src=\" + image1 + \">\";\r\n   // imageDiv.innerHTML = \"<figure> <img src=\" + image1 + \" alt='Elephant at sunset'> <figcaption>An elephant at sunset</figcaption> </figure>\";\r\n   // imageDiv.innerHTML = \"<figure> <img src=\" + image1 + \" alt='Elephant at sunset'> <figcaption>An elephant at sunset</figcaption> </figure>\";\r\n   // debugDiv.appendChild(imageDiv);\r\n\r\n  // for (let image of images) {\r\n  //   const imageDiv = document.createElement('div');\r\n  //   imageDiv.innerHTML = image.src;\r\n  //   debugDiv.appendChild(imageDiv);\r\n  // };\r\n\r\n\r\nnew Galerie({\r\n  el: '#app', // On colle notre Galerie sur le el\r\n  images // Données (ces données devrait venir de la db normalement)\r\n});\r\n"]}